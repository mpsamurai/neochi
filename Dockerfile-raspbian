FROM balenalib/rpi-raspbian:latest

COPY ./qemu-arm-static /usr/bin/qemu-arm-static

WORKDIR /tmp
RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get install -y \
        git \
        python3-dev python3-pip python3-setuptools\
        build-essential cmake unzip pkg-config \
        libjpeg-dev libpng-dev libtiff-dev \
        libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
        libxvidcore-dev libx264-dev \
        libgtk-3-dev libatlas-base-dev gfortran \
        wget && \
    pip3 install wheel numpy && \
    wget -O opencv.zip https://github.com/opencv/opencv/archive/3.4.4.zip && \
    wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.4.4.zip && \
    unzip opencv.zip && \
    unzip opencv_contrib.zip && \
    mv opencv-3.4.4 opencv && \
    mv opencv_contrib-3.4.4 opencv_contrib && \
    rm opencv.zip opencv_contrib.zip && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D INSTALL_PYTHON_EXAMPLES=OFF \
        -D INSTALL_C_EXAMPLES=OFF \
        -D OPENCV_ENABLE_NONFREE=OFF \
        -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules \
        -D PYTHON2_EXECUTABLE=/usr/bin/python \
        -D PYTHON_EXECUTABLE=/usr/bin/python3 \
        -D BUILD_EXAMPLES=OFF opencv && \
    make -j$(nproc --all) && make install && ldconfig && \
    ln -s /usr/local/python/cv2/python-3.7/cv2.cpython-37m-arm-linux-gnueabihf.so /usr/local/python/cv2/python-3.7/cv2.so && \
    rm -Rf /tmp/* && \
    apt-get autoclean

COPY ./requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt && \
    rm requirements.txt

RUN apt-get update && \
    apt-get install apt-transport-https ca-certificates software-properties-common -y && \
    curl -fsSL --insecure get.docker.com -o get-docker.sh && sh get-docker.sh && \
    usermod -aG docker pi && \
    curl --insecure https://download.docker.com/linux/raspbian/gpg && \
    deb https://download.docker.com/linux/raspbian/ buster stable >> /etc/apt/sources.list && \
    apt-get update && \
    apt-get purge -y docker-ce && \
    apt-get update && \
    apt-get install -y docker-ce && \
    systemctl start docker.service && \
    apt-get -y install python3-dev python3-pip libffi-dev && \
    pip3 install --no-cache-dir docker-compose && \
    apt-get autoclean && \
    git clone https://github.com/tensorflow/tensorflow.git && \
    cd tensorflow && \
    git checkout r1.15 && \
    CI_DOCKER_EXTRA_PARAMS="-e CI_BUILD_PYTHON=python3 -e CROSSTOOL_PYTHON_INCLUDE_PATH=/usr/include/python3.7" \
    tensorflow/tools/ci_build/ci_build.sh PI-PYTHON3 \
    tensorflow/tools/ci_build/pi/build_raspberry_pi.sh PI_ONE && \
    pip install tensorflow-version-cp37-none-linux_armv7l.whl

WORKDIR /code
COPY ./src /code/

COPY ./entrypoint.sh /usr/bin/entrypoint.sh
ENTRYPOINT ["entrypoint.sh"]

ENV PYTHONUNBUFFERED 1

CMD ["scripts/run-all.sh"]